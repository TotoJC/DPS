@model IEnumerable<DPS.Models.dolci>;

<div class="form-group">
    <label for="ddlSweets">Sweet</label>
    <select id="ddlSweets" class="form-select" aria-label="Default select example" onchange="RefreshForm()">
        @foreach(var item in Model) 
        { 
            <option value="@item.id">@item.nome</option> 

        } 
    </select> 
</div>

<div class="form-group">
    <label for="Price">Price</label>
    <input type="number" class="form-control" id="Price" placeholder="Price" disabled value="@Model.FirstOrDefault().prezzo">
</div>
<div class="form-group">
    <label for="Quantity">Quantity available</label>
    <input type="number" class="form-control" id="Quantity" placeholder="Quantity" disabled value="@Model.FirstOrDefault().quantita">
</div>
<div class="form-group">
    <label for="NQuantity">Number of items to purchase</label>
    <input type="number" class="form-control" id="NQuantity" placeholder="0" value="0">
</div>
<button type="submit" id="btnBuy" class="btn btn-primary" onclick="BuyBtnClicked()">Buy</button>


<script>
    function BuyBtnClicked() {
        var quantity = document.getElementById('Quantity').value; 
        var nquantity = document.getElementById('NQuantity').value;
        var quantityValue = parseInt(quantity, 10);  
        var nquantityValue = parseInt(nquantity, 10);
        
        if(quantityValue < nquantityValue) {
            alert('Not enough sweet avaible');
            return;
        }
        var formObj = new Object();
        formObj.id = document.getElementById('ddlSweets').value; 
        formObj.quantita = quantity - nquantity; 
        var formData = new FormData(); 
        formData.append('id', formObj.id); 
        console.log(formData)
        formData.append('quantita', formObj.quantita); 

        var xhr = new XMLHttpRequest();
        xhr.open('PUT', localhp + '/Home/BuySweetById');
        xhr.onload = function() {
            if (xhr.status === 200) {
                var sweet = JSON.parse(xhr.responseText);   
                alert(sweet);
                RefreshForm();
                location.reload();
            } else {
            alert('Error:', xhr.statusText);
            }
        };
        xhr.send(formData);
    } 

    function RefreshForm() { 
        var formObj = new Object();
        formObj.id = document.getElementById('ddlSweets').value; 
        var formData = new FormData();
        formData.append('id', formObj.id); 

        var xhr = new XMLHttpRequest();
        xhr.open('GET', localhp + '/Home/GetSweetById/' + formObj.id);
        xhr.onload = function() {
            if (xhr.status === 200) {
                var sweet = JSON.parse(xhr.responseText);  
                const d = new Date(sweet.data); 
                const date = new Date();
                const millisecondsDiff = d.getTime() - date.getTime();
                const daysDiff = millisecondsDiff / (1000 * 60 * 60 * 24);

                var p = 0;
                switch(true) {
                    case daysDiff < 1:
                        p = sweet.prezzo;
                        break;
                    case daysDiff <= 2:
                        p = sweet.prezzo - ((sweet.prezzo * 20) / 100);
                        break;
                    case daysDiff <= 3:
                        p = sweet.prezzo - ((sweet.prezzo * 80) / 100);
                        break; 
                    case daysDiff > 0:
                        p = -1;
                        break;
                } 

                document.getElementById('Price').value = p;
                document.getElementById('Quantity').value = sweet.quantita;
            } else {
            alert('Error:', xhr.statusText);
            }
        };
        xhr.send();
    }
</script>