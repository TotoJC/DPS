@model DPS.Models.dolci;
<button type="button" class="btn btn-primary" onclick="setupForm()" style="position:relative;float: right;top: 15px;left: -5px;" id="btnAdd" data-bs-toggle="modal" data-bs-target="#exampleModal">Add Sweet</button>
<table class="table table-striped table-hover table-sm">
  <thead>
    <tr class="bg-black text-light">
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Price</th>
      <th scope="col">Quantity</th>
    </tr>
  </thead>
  <tbody id="tblBody">
     
  </tbody>   
</table>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalTitle">Detail</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body"> 
        <div class="mb-2">
          <label asp-for="id"></label>
          <input type="text" asp-for="id" placeholder="ID" class="form-control" disabled>
        </div>
        <div class="mb-2">
          <label asp-for="nome"></label>
          <input type="text" asp-for="nome" placeholder="Name" class="form-control">
        </div>
        <div class="mb-2">
          <label asp-for="prezzo"></label>
          <input type="number" asp-for="prezzo" placeholder="Price" class="form-control">
        </div>
        <div class="mb-2">
          <label asp-for="quantita"></label>
          <input type="number" asp-for="quantita" placeholder="Quantity" class="form-control">
        </div>
        <div class="mb-2">
          <label asp-for="data"></label>
          <input type="date" asp-for="data" placeholder="Date" class="form-control">
        </div> 
        <div class="mb-2">
          <label asp-for="ConcatIngredients"></label>
          <input type="text" asp-for="ConcatIngredients" placeholder="ingredient1;ingredient2;..." class="form-control">
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" id="btnSave" class="btn btn-primary" onclick="saveSweet()">Save</button>
        <button type="submit" id="btnUpdate" class="btn btn btn-warning" onclick="updateSweet()">Update</button>
        <button type="button" id="btnDelete" class="btn btn-danger" onclick="deleteSweet()" data-bs-dismiss="modal">Delete</button> 
      </div>
    </div>
  </div>
</div>

<script>   

GetProduct();
function GetProduct() {
    function getSweetList() {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "/Home/GetSweet"); 
      
        xhr.onload = function() {
          if (xhr.status === 200) {
            var sweets = JSON.parse(xhr.responseText);  
            console.log(sweets);
            var result = ''; 
            var i = 1;
            sweets.forEach(element => {
                var id = element.id;
                result += '<tr>';
                result += '<th>' + i + '</th>';
                result += '<th>' + element.nome + '</th>';
                result += '<th>' + element.prezzo + '</th>';
                result += '<th>' + element.quantita + '</th>';
                result += '<td class="text-center py-1"> <button type="button"'
                result += `onclick='edit(this.id)'`;
                result += 'class="btn btn-outline-primary btn-xs open-AddBookDialog" id="'+ element.id +'" data-bs-toggle="modal" data-bs-target="#exampleModal" asp-action="Edit" asp-route-id="'+ element.id +'"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info" viewBox="0 0 16 16"> <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/></svg></button></td>';
                
                result += '</tr>';
                i++;
            });

            document.getElementById("tblBody").innerHTML = result;
          } else {
            console.error("Error:", xhr.statusText);
          }
        };
      
        xhr.onerror = function() {
          console.error("Error");
        };
      
        xhr.send();
      }
      
      getSweetList();
}

function saveSweet() {
  var formObj = new Object();
  formObj.id = document.getElementById('id').value;
  formObj.nome = document.getElementById('nome').value;
  formObj.prezzo = document.getElementById('prezzo').value;
  formObj.quantita = document.getElementById('quantita').value;
  formObj.data = document.getElementById('data').value; 
  var ingredients = document.getElementById('ConcatIngredients').value;
  formObj.ingredienti = ingredients.split(';'); 

  var formData = new FormData();
  formData.append('id', formObj.id);
  formData.append('nome', formObj.nome);
  formData.append('prezzo', formObj.prezzo);
  formData.append('quantita', formObj.quantita);
  formData.append('data', formObj.data);

  for (var i = 0; i < formObj.ingredienti.length; i++) {
    formData.append('ingredienti[]', formObj.ingredienti[i]);
  }

  var xhr = new XMLHttpRequest();
  xhr.open('POST', 'http://localhost:5154/Home/CreateSweet');
  xhr.onload = function() {
    if (xhr.status === 200) {
      alert('Saved!');
      location.reload();
    } else {
      alert('Error:', xhr.statusText);
    }
  };
  xhr.send(formData);


}

function edit(id) { 
  document.getElementById('btnSave').style.display = 'none'; 
  document.getElementById('btnUpdate').style.display = 'block'; 
  document.getElementById('btnDelete').style.display = 'block'; 

  var xhr = new XMLHttpRequest();
  xhr.open("GET", "http://localhost:3000/dolci/"+ id);
      
  clean('loading');

  xhr.onload = function() {
    if (xhr.status === 200) {
      var sweet = JSON.parse(xhr.responseText);
      document.getElementById('id').value = sweet.id;
      document.getElementById('nome').value = sweet.nome;
      document.getElementById('prezzo').value = sweet.prezzo;
      document.getElementById('quantita').value = sweet.quantita;
      document.getElementById('data').value = sweet.data;
      if(sweet.ingredienti != null && sweet.ingredienti.length > 0){
        document.getElementById('ConcatIngredients').value = sweet.ingredienti.join(';');
      }
      else {
        document.getElementById('ConcatIngredients').value = '';
      } 
    } else {
      console.error("Error:", xhr.statusText);
    }
  };
      
  xhr.onerror = function() {
    console.error("Error");
  };
      
  xhr.send(id); 
}

function cleanForm() {
  const message = '';
  clean(message)
}


function clean(message) { 
  document.getElementById('id').value = message;
  document.getElementById('nome').value = message;
  document.getElementById('prezzo').value = 0;
  document.getElementById('quantita').value = 0;
  document.getElementById('ConcatIngredients').value = message;
}
 

function setupForm() {
  cleanForm(); 
  document.getElementById('btnSave').style.display = 'block'; 
  document.getElementById('btnUpdate').style.display = 'none'; 
  document.getElementById('btnDelete').style.display = 'none'; 

  
}

function deleteSweet() {
  var id = document.getElementById('id').value;
  var xhr = new XMLHttpRequest();
  xhr.open("DELETE", "http://localhost:3000/dolci/"+ id);
       
  xhr.onload = function() {
    if (xhr.status === 200) {
      alert('Deleted!');
      location.reload();
    } else {
      console.error("Error:", xhr.statusText);
    }
  };
      
  xhr.onerror = function() {
    console.error("Error");
  };
      
  xhr.send(); 
}

function updateSweet() {
  console.log('update');
  var formObj = new Object();
  formObj.id = document.getElementById('id').value;
  formObj.nome = document.getElementById('nome').value;
  formObj.prezzo = document.getElementById('prezzo').value;
  formObj.quantita = document.getElementById('quantita').value;
  formObj.data = document.getElementById('data').value; 
  var ingredients = document.getElementById('ConcatIngredients').value;
  formObj.ingredienti = ingredients.split(';'); 

  var formData = new FormData();
  formData.append('id', formObj.id);
  formData.append('nome', formObj.nome);
  formData.append('prezzo', formObj.prezzo);
  formData.append('quantita', formObj.quantita);
  formData.append('data', formObj.data);

  for (var i = 0; i < formObj.ingredienti.length; i++) {
    formData.append('ingredienti[]', formObj.ingredienti[i]);
  }

  var xhr = new XMLHttpRequest();
  xhr.open('PUT', 'http://localhost:5154/Home/UpdateSweet');
  xhr.onload = function() {
    if (xhr.status === 200) {
      var res = JSON.parse(xhr.responseText);   
      alert(res);
      location.reload();
    } else {
      alert('Error:', xhr.statusText);
    }
  };
  xhr.send(formData);
}
</script>